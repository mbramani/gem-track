// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id        String   @id @default(uuid())
  name      String   @db.VarChar(100)
  email     String   @unique @db.VarChar(256)
  password  String   @db.VarChar(60)
  role      UserRole @default(USER)
  phoneNo   String   @db.VarChar(15)
  gstInNo   String   @db.VarChar(15)
  addressId String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  address   Address  @relation(fields: [addressId], references: [id], onDelete: Cascade)
  clients   Client[]
}

model Client {
  id        String   @id @default(uuid())
  clientId  String   @db.VarChar(256)
  name      String   @db.VarChar(253)
  email     String?  @db.VarChar(256)
  phoneNo   String   @db.VarChar(15)
  gstInNo   String   @db.VarChar(15)
  userId    String
  addressId String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  address   Address  @relation(fields: [addressId], references: [id], onDelete: Cascade)
}

model Address {
  id           String   @id @default(uuid())
  addressLine1 String   @db.Text
  addressLine2 String?  @db.Text
  city         String   @db.VarChar(255)
  state        String   @db.VarChar(255)
  country      String   @db.VarChar(255)
  postalCode   String   @db.VarChar(6)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User?
  client       Client?
}
